**1. Установка и Базовая Настройка Arch Linux (Предполагается, что ОС уже установлена, но это фундамент):**
*   **Обновление системы:** Первым делом всегда обновляйте систему!
    ```bash
    sudo pacman -Syu
    ```
*   **Установка Необходимых Базовых Утилит:**
    ```bash
    sudo pacman -S base-devel git sudo openssh screen vim nano # (выберите удобный редактор)
    ```
*   **Настройка Пользователя:** Убедитесь, что у вас есть непривилегированный пользователь с правами `sudo`.

**2. Установка и Настройка ПО для Мониторинга и Визуализации (Ядро системы):**

*   **Выбор Связки:** Наиболее стандартная и мощная связка - **Zabbix (Сбор данных, хранение, алертинг) + Grafana (Визуализация)**. Она соответствует всем требованиям билета.
*   **Установка Zabbix Server, Frontend, Agent и PostgreSQL:**
    1.  **База Данных (PostgreSQL):** Zabbix требует БД.
        ```bash
        sudo pacman -S postgresql
        sudo su - postgres -c "initdb --locale en_US.UTF-8 -D /var/lib/postgres/data"
        sudo systemctl enable --now postgresql.service
        ```
    2.  **Создание БД и Пользователя Zabbix:** Залогиньтесь в `psql` под `postgres`:
        ```sql
        CREATE USER zabbix WITH PASSWORD 'Ваш_Очень_Сложный_Пароль';
        CREATE DATABASE zabbix OWNER zabbix;
        \q
        ```
    3.  **Установка Zabbix:**
        ```bash
        sudo pacman -S zabbix-server zabbix-frontend-php zabbix-agent
        ```
    4.  **Настройка Zabbix Server (`/etc/zabbix/zabbix_server.conf`):**
        *   Измените параметры БД:
            ```
            DBHost=localhost
            DBName=zabbix
            DBUser=zabbix
            DBPassword=Ваш_Очень_Сложный_Пароль
            ```
    5.  **Импорт Схемы БД:**
        ```bash
        zcat /usr/share/zabbix-server/postgresql/{schema,images,data}.sql.gz | sudo -u zabbix psql zabbix
        ```
    6.  **Настройка PHP для Frontend (`/etc/webapps/zabbix-frontend-php/conf.d/zabbix.conf` или `/etc/php/php.ini`):**
        *   Убедитесь, что заданы корректные настройки таймзоны (`date.timezone`), памяти (`memory_limit`), и т.д. Часто нужно раскомментировать/изменить:
            ```
            date.timezone = Europe/Moscow  # Укажите свою таймзону
            memory_limit = 128M            # Может потребоваться увеличить
            post_max_size = 16M
            upload_max_filesize = 2M
            max_execution_time = 300
            max_input_time = 300
            ```
    7.  **Настройка Веб-Сервера (Nginx или Apache):**
        *   Установите `nginx` или `httpd` (Apache).
        *   Создайте виртуальный хост, указывающий на `/usr/share/webapps/zabbix/`. Пример для Nginx (`/etc/nginx/nginx.conf` или в `sites-available/`):
            ```nginx
            server {
                listen 80;
                server_name monitoring.yourcompany.local; # Или IP

                root /usr/share/webapps/zabbix;
                index index.php;

                location / {
                    try_files $uri $uri/ /index.php?$args;
                }

                location ~ \.php$ {
                    fastcgi_pass unix:/run/php-fpm/php-fpm.sock; # Или другой socket/tcp адрес вашего PHP-FPM
                    fastcgi_index index.php;
                    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                    include fastcgi_params;
                }
            }
            ```
        *   Проверьте конфиг `nginx -t`, перезапустите `sudo systemctl restart nginx`.
    8.  **Запуск Сервисов:**
        ```bash
        sudo systemctl enable --now zabbix-server zabbix-agent nginx php-fpm
        ```
    9.  **Завершение Установки через Веб-Интерфейс:** Откройте `http://<ваш_сервер>/` в браузере. Пройдите мастер установки (проверка требований, настройка подключения к БД, настройки сервера, предустановки). Логин по умолчанию: `Admin` / `zabbix`.

*   **Установка Grafana:**
    1.  Установите пакет:
        ```bash
        sudo pacman -S grafana
        ```
    2.  Запустите и включите сервис:
        ```bash
        sudo systemctl enable --now grafana-server
        ```
    3.  **Настройка Источника Данных:** Откройте `http://<ваш_сервер>:3000/`. Логин по умолчанию: `admin` / `admin`. Первым делом создайте Data Source -> Zabbix.
        *   **Type:** Zabbix
        *   **URL:** `http://localhost:8080/api_jsonrpc.php` (или адрес вашего Zabbix API)
        *   **Auth:** Включить `With credentials` и `With Credentials in Zabbix API details`
        *   **Username:** `Admin` (или созданный пользователь)
        *   **Password:** Пароль пользователя Zabbix.
        *   **Zabbix API details:** Включить `Trends`, `DB Connection`, `Alerting`.
        *   Нажмите "Save & Test". Должна быть зеленая галочка.
    4.  **Создание Дашбордов:** Импортируйте готовые дашборды из [Grafana Dashboards](https://grafana.com/grafana/dashboards/) (ищите "Zabbix") или создавайте свои. Ключевые элементы: CPU, Memory, Disk, Network, Uptime, статусы сервисов.

**3. Настройка Алертинга (Уведомлений):**

*   **В Zabbix:**
    1.  **Media Types:** Администрирование -> Media types. Настройте Email, Slack, Telegram (нужен скрипт) или другие способы.
    2.  **Пользователи:** Настройте пользователям их контактные данные и включите нужные способы уведомлений (Media).
    3.  **Actions:** Конфигурация -> Действия. Создайте триггерные действия. Определите:
        *   **Условия:** Какие триггеры запускают действие (например, Высокая загрузка CPU, Нет свободного места на диске, Сервис недоступен).
        *   **Операции:** Кому и как отправлять уведомление (Выбрать пользователей/группы и тип Media).
        *   **Восстановление:** Настроить уведомления о восстановлении.

*   **В Grafana (Альтернатива/Дополнение):** Может отправлять алерты через свои каналы (Email, Slack, PagerDuty и т.д.), но логика триггеров проще, чем в Zabbix. Часто используют Zabbix для сложного детектирования проблем, а Grafana - для визуализации и, иногда, доп. алертинга.

**4. Настройка Базовой Защиты (Критически Важно!):**

*   **SSH:**
    1.  **Отключить root-логин:** `/etc/ssh/sshd_config`: `PermitRootLogin no`
    2.  **Использовать Аутентификацию по Ключу:** `/etc/ssh/sshd_config`: `PasswordAuthentication no`. Сгенерируйте ключи на клиенте (`ssh-keygen`), скопируйте публичный ключ на сервер в `~/.ssh/authorized_keys` (`ssh-copy-id user@server`).
    3.  **Изменить Порт (Опционально, но рекомендуется):** `/etc/ssh/sshd_config`: `Port 2222` (или другой нестандартный). Не забудьте разрешить порт в фаерволе!
    4.  **Применить настройки:** `sudo systemctl restart sshd`. **Убедитесь, что у вас есть доступ по ключу ДО перезагрузки!**

*   **Брандмауэр (`firewalld`):**
    1.  Установите: `sudo pacman -S firewalld`
    2.  Включите и запустите: `sudo systemctl enable --now firewalld`
    3.  **Разрешите ТОЛЬКО необходимые порты:**
        ```bash
        sudo firewall-cmd --permanent --add-service=http   # Для Zabbix/Grafana/Cockpit (если используется)
        sudo firewall-cmd --permanent --add-service=https  # Если нужен HTTPS
        sudo firewall-cmd --permanent --add-port=10050/tcp # Zabbix Agent (для связи сервер-агенты в будущем)
        sudo firewall-cmd --permanent --add-port=3000/tcp # Grafana (если не проксируется через Nginx/Apache)
        sudo firewall-cmd --permanent --add-port=9090/tcp # Cockpit (если используется)
        sudo firewall-cmd --permanent --add-port=Ваш_SSH_Порт/tcp # Ваш нестандартный SSH порт!
        sudo firewall-cmd --reload
        ```
    4.  Убедитесь: `sudo firewall-cmd --list-all`

*   **Fail2ban (Защита от брутфорса):**
    1.  Установите: `sudo pacman -S fail2ban`
    2.  Настройте jail для SSH (с учетом вашего порта!): Создайте `/etc/fail2ban/jail.local`:
        ```ini
        [sshd]
        enabled = true
        port = Ваш_SSH_Порт
        maxretry = 3
        findtime = 10m
        bantime = 1h
        logpath = %(sshd_log)s
        ```
    3.  Запустите: `sudo systemctl enable --now fail2ban`

*   **Настройка Пользователей и Sudo:**
    1.  Создавайте пользователей через `useradd` / `adduser`.
    2.  Минимизируйте права. Добавляйте в `sudoers` (`visudo`) только тех, кому это реально нужно:
        ```bash
        # %wheel ALL=(ALL:ALL) ALL # Раскомментируйте, если используете группу wheel
        username ALL=(ALL:ALL) ALL  # Или так для конкретного пользователя
        ```
        Или давайте права только на конкретные команды.

*   **Обновления:** Регулярно выполняйте `sudo pacman -Syu`.

**5. Тестирование Работоспособности (Обязательный Этап!):**

1.  **Доступность Веб-Интерфейсов:**
    *   Zabbix: `http://<server>/` - Успешный логин.
    *   Grafana: `http://<server>:3000/` - Успешный логин, виден источник данных Zabbix.
2.  **Сбор Данных с Локального Агента (Zabbix Server сам - это Host):**
    *   В Zabbix: Перейдите в "Конфигурация" -> "Узлы сети" (Hosts). Убедитесь, что узел `Zabbix server` в статусе "Мониторинг включен" и "Агент доступен" (зеленый значок).
    *   Перейдите в "Мониторинг" -> "Последние данные", выберите узел `Zabbix server`. Должны быть данные по CPU, памяти, дискам и т.д.
3.  **Визуализация в Grafana:**
    *   Создайте/импортируйте простой дашборд для узла `Zabbix server`. Убедитесь, что графики отображают данные.
4.  **Проверка Алертинга:**
    *   **Создайте тестовый триггер:** Например, на высокую загрузку CPU (если сейчас она низкая, можно временно установить порог 1%).
    *   **Настройте тестовое действие:** Отправка email на ваш реальный адрес или сообщение в тестовый Telegram/Slack.
    *   **Сымитируйте проблему:** Запустите `stress-ng --cpu 2 --timeout 60s` на сервере, чтобы нагрузить CPU.
    *   **Убедитесь:**
        *   В Zabbix появилась "Проблема" (Monitoring -> Problems).
        *   Пришло тестовое уведомление.
        *   После окончания нагрузки пришло уведомление о восстановлении.
5.  **Проверка Защиты:**
    *   Попробуйте подключиться по SSH с неправильным паролем >3 раз. Убедитесь, что IP блокируется fail2ban (`fail2ban-client status sshd`).
    *   Попробуйте подключиться по SSH под root - должно быть запрещено.
    *   Попробуйте подключиться на стандартный порт 22 (если меняли) - фаервол должен блокировать.

**Дополнительные Компоненты (По требованию билета):**

*   **Cockpit (Управление):**
    ```bash
    sudo pacman -S cockpit cockpit-podman cockpit-machines  # Базовый + доп. модули
    sudo systemctl enable --now cockpit.socket
    ```
    *   Разрешите порт 9090 в `firewalld`: `sudo firewall-cmd --permanent --add-service=cockpit; sudo firewall-cmd --reload`
    *   Доступ: `https://<server>:9090`. Полезен для базового мониторинга ресурсов самого сервера, просмотра журналов, управления контейнерами (если нужно), но **не заменяет** Zabbix/Grafana для мониторинга множества сервисов и инфраструктуры. Отличный легкий инструмент для администрирования *этого* сервера.
*   **Ansible (Автоматизация - для масштабирования):**
    *   Установка: `sudo pacman -S ansible`
    *   **Применение:** Написание плейбуков для:
        *   Массовой установки и настройки `zabbix-agent` на новых серверах.
        *   Конфигурации системных параметров (ssh, firewall, users) на множестве серверов.
        *   Обновления ПО на группе серверов.
    *   Требует отдельного глубокого изучения, но критически важен для управления большим парком серверов.



### Руководство пользователя по установке и использованию программы «Grafana» в ОС Arch Linux  

**1. ВВЕДЕНИЕ**  
1.1. **Область применения**  
Grafana — это платформа с открытым исходным кодом для анализа и визуализации данных. Предназначена для мониторинга метрик систем, сервисов и приложений через интерактивные дашборды. Интегрируется с источниками данных (Zabbix, Prometheus, SQL-базы и др.).  

1.2. **Краткое описание возможностей**  
- Создание дашбордов с графиками, таблицами и диаграммами  
- Подключение к источникам данных (Zabbix, Prometheus, MySQL и др.)  
- Настройка алертинга (уведомления о проблемах через Email, Slack, Telegram)  
- Управление пользователями и правами доступа  
- Импорт/экспорт шаблонов дашбордов  

1.3. **Уровень подготовки пользователя**  
Требуются:  
- Права администратора для установки  
- Базовые навыки работы с терминалом и пакетным менеджером pacman  
- Знание основ мониторинга (метрики, источники данных)  

**2. НАЗНАЧЕНИЕ И УСЛОВИЯ ПРИМЕНЕНИЯ**  
2.1. **Виды деятельности, функции**  
Grafana используется для:  
- Визуализации метрик производительности серверов и сервисов  
- Анализа исторических данных  
- Оперативного обнаружения аномалий через алертинг  
- Создания единой панели мониторинга для команды  

2.2. **Условия применения**  
- Технические средства: Сервер/ПК с ОС Arch Linux  
- Минимальные требования: 1 ГБ ОЗУ, 1 ГБ дискового пространства  
- Операционная среда:  
  - Установленный веб-сервер (Nginx/Apache) - опционально  
  - Доступ к источникам данных (например, Zabbix API)  
  - Рабочий SMTP-сервер для уведомлений (опционально)  

**3. ПОДГОТОВКА К РАБОТЕ**  
3.1. **Порядок загрузки программ и данных**  
Установка Grafana:  
```
sudo pacman -Syu grafana
```  
Включение автозапуска и запуск службы:  
```
sudo systemctl enable --now grafana-server
```  

3.2. **Порядок проверки работоспособности**  
1. Откройте в браузере: http://<IP_сервера>:3000  
2. Стандартные учетные данные:  
   - Логин: admin  
   - Пароль: admin  
3. При первом входе измените пароль  
4. Убедитесь, что на главной странице отображается интерфейс Grafana  

**4. ОПИСАНИЕ ОПЕРАЦИЙ**  
4.1.1. **Подключение источника данных (Data Source)**  
*Наименование*: Настройка подключения к Zabbix  
*Условия*: Запущенный сервер Zabbix, доступ к его API  
*Подготовительные действия*:  
  - Войдите в Grafana как администратор  
*Основные действия*:  
  1. На левой панели: Configuration (шестеренка) → Data Sources → Add data source  
  2. Выберите Zabbix  
  3. Заполните параметры:  
     - URL: http://<IP_Zabbix>/api_jsonrpc.php  
     - Auth: Включите опции *With credentials* и *With credentials in Zabbix API details*  
     - Логин/пароль: Учетные данные Zabbix (например, Admin/zabbix)  
  4. Нажмите Save & Test. Убедитесь, что отображается "Data source is working"  
*Заключительные действия*: Проверьте доступность метрик через Explorer  

4.1.2. **Создание дашборда**  
*Наименование*: Построение графика загрузки CPU  
*Условия*: Подключенный источник данных Zabbix  
*Подготовительные действия*:  
  - На главной странице нажмите Create (плюс) → Dashboard  
*Основные действия*:  
  1. Нажмите Add new panel  
  2. В разделе Query:  
     - Выберите источник данных: Zabbix  
     - В поле Query укажите метрику: system.cpu.util[,idle]  
     - Выберите Visualization: Graph  
  3. Настройте заголовок панели: CPU Usage  
  4. Нажмите Apply  
*Заключительные действия*:  
  - Сохраните дашборд: Save (дискета) → Введите название → Save  

4.1.3. **Настройка алертинга**  
*Наименование*: Уведомление о высокой загрузке CPU  
*Условия*: Созданный дашборд с метрикой CPU  
*Подготовительные действия*:  
  - Откройте панель с метрикой CPU  
*Основные действия*:  
  1. Перейдите на вкладку Alert  
  2. Нажмите Create alert rule from this panel  
  3. В разделе Conditions:  
     - Укажите: WHEN max() OF query(A, 1m, now) IS ABOVE 90  
  4. В разделе Notifications:  
     - Добавьте канал уведомлений (предварительно настройте Email/Slack в Alerting → Notification channels)  
  5. Нажмите Save and exit  
*Заключительные действия*: Проверьте состояние алерта в Alerting → Alert rules  

**5. АВАРИЙНЫЕ СИТУАЦИИ**  
5.1. **Grafana не запускается**  
- Причина: Конфликт портов, ошибки конфигурации  
- Действия:  
  1. Проверьте статус службы:  
     ```
     sudo systemctl status grafana-server
     ```  
  2. Просмотрите логи:  
     ```
     journalctl -u grafana-server -b --no-pager
     ```  
  3. Проверьте занятость порта 3000:  
     ```
     ss -tulpn | grep 3000
     ```  

5.2. **Нет данных в дашбордах**  
- Причина: Проблемы с источником данных  
- Действия:  
  1. Проверьте подключение к источнику данных: Data Sources → Test connection  
  2. Убедитесь, что источник данных (например, Zabbix) активен и доступен  
  3. Проверьте настройки брандмауэра:  
     ```
     sudo firewall-cmd --list-all
     ```  

5.3. **Уведомления не отправляются**  
- Причина: Ошибки в настройках SMTP/Slack  
- Действия:  
  1. Проверьте конфигурацию канала уведомлений: Alerting → Notification channels  
  2. Протестируйте канал: нажмите Test в настройках канала  
  3. Проверьте логи Grafana на ошибки отправки:  
     ```
     journalctl -u grafana-server | grep "alerting"
     ```  

5.4. **Утерян пароль администратора**  
- Причина: Сброс учетных данных  
- Действия:  
  1. Остановите Grafana:  
     ```
     sudo systemctl stop grafana-server
     ```  
  2. Измените пароль через базу данных (по умолчанию SQLite):  
     ```
     sqlite3 /var/lib/grafana/grafana.db
     UPDATE user SET password = '59acf18b94d7eb0694c61e60ce44c110c7a683ac6a8f09580d626f90f4a242000746579358c77dd9b570b82f147d6ef' WHERE login='admin';
     ```  
     *Примечание: Хеш соответствует паролю 'admin'*  
  3. Перезапустите Grafana:  
     ```
     sudo systemctl start grafana-server
     ```  
